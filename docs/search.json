[
  {
    "objectID": "SequencePaperSep24.html",
    "href": "SequencePaperSep24.html",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "",
    "text": "Tracking and understanding neighborhood changes has been a central topic of urban studies and a fundamental concern for planning practitioners (Galster 2001; Landis 2016; Chapple and Zuk 2016). Neighborhood change can be comprehended according to various dimensions, from housing stock or built environment changes to residents’ demographic and socioeconomic composition (Delmelle 2022). Thus, the study of neighborhood change involves analyzing multiple attribute dimensions through time for spatially situated units. Recent scholarship has progressed in the analytical strategies used to study neighborhood trajectories, introducing new methods for visualizing and mapping longitudinal pathways of change for multiple dimensions (Delmelle 2022).\nIn this article, we demonstrate one such technique, sequence analysis, to explore decennial neighborhood racial and ethnic changes in New York City from 1980-2020. The United States’ demographic profile has become increasingly diverse in the past several decades, driven by immigration and growing natural birth rates of the non-White population (Frey 2022). Analyses following the release of the 2010 decennial census showed that increasing national diversity resulted in differing neighborhood trajectories, largely contingent on the broader metropolitan context (Terbeck 2023; Wright et al. 2014).\nMuch of the empirical scholarship on neighborhood racial and ethnic changes has developed indices to categorize the makeup or diversity of racial and ethnic groups and then explored changes in a neighborhood’s diversity categorization over time. For example, a neighborhood might transition from ‘low diverse’ to ‘moderately diverse’ from one decade to the next (Farrell and Lee 2011; Wright et al. 2014). Alternately, another set of techniques aims to describe the longitudinal sequences or trajectories that the racial and ethnic groups in a neighborhood have followed. Two methods have been used for this purpose: statistical curve fitting and sequence analysis. With curve-fitting models like growth mixture models or latent growth models, mathematical functions fit each racial and ethnic group under study that summarize the predominant trends (Zwiers, Ham, and Manley 2018; Hipp and Kim 2023a). With sequence analysis, neighborhoods are first grouped into similar clusters according to their racial and ethnic makeup using an unsupervised clustering algorithm like k-means. This is done for all neighborhoods and all time stamps. Then, each neighborhood is assigned a categorical cluster over time, and finally, the sequences of these clusters are grouped using a sequence alignment technique (Delmelle 2016; González‐Leonardo, Newsham, and Rowe 2023). Both methods aim to develop a typology of the predominant longitudinal pathways of change for multiple variables at once.\nIn this article, we explore trajectories of neighborhood racial and ethnic changes in the largest and one of the most diverse cities in the United States, New York City, using longitudinal census data up to the latest 2020 decennial release. This notebook showcases a workflow that introduces sequence analysis to the study of multidimensional neighborhood changes. We begin by processing the raw longitudinal census data, then performing a k-means classification, and finally classify and map sequences clusters. Our case study illustrates the gradual progression that neighborhoods follow in when undergoing racial and ethnic transformations. We observe an overall decline in the share of neighborhoods categorized by a large White majority population, in exchange for increasing diversity, especially Hispanic and Asian populations."
  },
  {
    "objectID": "SequencePaperSep24.html#sec-intro",
    "href": "SequencePaperSep24.html#sec-intro",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "",
    "text": "Tracking and understanding neighborhood changes has been a central topic of urban studies and a fundamental concern for planning practitioners (Galster 2001; Landis 2016; Chapple and Zuk 2016). Neighborhood change can be comprehended according to various dimensions, from housing stock or built environment changes to residents’ demographic and socioeconomic composition (Delmelle 2022). Thus, the study of neighborhood change involves analyzing multiple attribute dimensions through time for spatially situated units. Recent scholarship has progressed in the analytical strategies used to study neighborhood trajectories, introducing new methods for visualizing and mapping longitudinal pathways of change for multiple dimensions (Delmelle 2022).\nIn this article, we demonstrate one such technique, sequence analysis, to explore decennial neighborhood racial and ethnic changes in New York City from 1980-2020. The United States’ demographic profile has become increasingly diverse in the past several decades, driven by immigration and growing natural birth rates of the non-White population (Frey 2022). Analyses following the release of the 2010 decennial census showed that increasing national diversity resulted in differing neighborhood trajectories, largely contingent on the broader metropolitan context (Terbeck 2023; Wright et al. 2014).\nMuch of the empirical scholarship on neighborhood racial and ethnic changes has developed indices to categorize the makeup or diversity of racial and ethnic groups and then explored changes in a neighborhood’s diversity categorization over time. For example, a neighborhood might transition from ‘low diverse’ to ‘moderately diverse’ from one decade to the next (Farrell and Lee 2011; Wright et al. 2014). Alternately, another set of techniques aims to describe the longitudinal sequences or trajectories that the racial and ethnic groups in a neighborhood have followed. Two methods have been used for this purpose: statistical curve fitting and sequence analysis. With curve-fitting models like growth mixture models or latent growth models, mathematical functions fit each racial and ethnic group under study that summarize the predominant trends (Zwiers, Ham, and Manley 2018; Hipp and Kim 2023a). With sequence analysis, neighborhoods are first grouped into similar clusters according to their racial and ethnic makeup using an unsupervised clustering algorithm like k-means. This is done for all neighborhoods and all time stamps. Then, each neighborhood is assigned a categorical cluster over time, and finally, the sequences of these clusters are grouped using a sequence alignment technique (Delmelle 2016; González‐Leonardo, Newsham, and Rowe 2023). Both methods aim to develop a typology of the predominant longitudinal pathways of change for multiple variables at once.\nIn this article, we explore trajectories of neighborhood racial and ethnic changes in the largest and one of the most diverse cities in the United States, New York City, using longitudinal census data up to the latest 2020 decennial release. This notebook showcases a workflow that introduces sequence analysis to the study of multidimensional neighborhood changes. We begin by processing the raw longitudinal census data, then performing a k-means classification, and finally classify and map sequences clusters. Our case study illustrates the gradual progression that neighborhoods follow in when undergoing racial and ethnic transformations. We observe an overall decline in the share of neighborhoods categorized by a large White majority population, in exchange for increasing diversity, especially Hispanic and Asian populations."
  },
  {
    "objectID": "SequencePaperSep24.html#sec-compEnv",
    "href": "SequencePaperSep24.html#sec-compEnv",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "Computational environment",
    "text": "Computational environment\nThe main libraries used in this paper include dplyr for processing tabular census data, sf for mapping the resulting clusters, cluster for performing the k-means cluster analysis. Finally, to perform the sequence analysis, we use TraMineR (Gabadinho et al. 2011). This is a popular and continually updated R package for performing sequence analysis for a host of social science applications, including analyses of neighborhood change (Delmelle 2016, 2017; Patias, Rowe, and Cavazzi 2020)."
  },
  {
    "objectID": "SequencePaperSep24.html#sec-data",
    "href": "SequencePaperSep24.html#sec-data",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "Data",
    "text": "Data\nWe use decennial census tract data to examine neighborhood racial and ethnic changes. Census tracts serve as imperfect, yet well-used neighborhood proxies. Census tract boundaries change over time, further complicating the study of population dynamics within these boundaries. There are several sources of data that have been harmonized using interpolation techniques to a consistent set of boundaries over time. We use the Longitudinal Tract Database (LTDB) which uses areal and population interpolation techniques alongside ancillary data on water cover to derive estimates (Logan, Xu, and Stults 2014). Analyses of the errors produced by three popular longitudinal data providers suggest that LTDB performs similarly to the dataset produced by the National Historic Geographic Information System (NHGIS) and both perform better than the Neighborhood Change Database which relies solely on areal interpolation without the inclusion of ancillary data (Logan, Xu, and Stults 2014). Therefore, for this type of analysis either the LTDB or NHGIS would be suitable dataset for this analysis.\nWe obtained the full count decennial data from LTDB from 1980-2020 from the Diversity and Disparties project at Brown University. The census variables have been interpolated to 2010 tract boundaries. Because the coding of census race and ethnicity changes over time, we opted to begin in 1980 as 1970, the earliest dataset available, did not record a count of Latino or Hispanic residents. The raw data contains all census tracts throughout the United States. For visualization purposes, we also import a shapefile of 2010 census tract boundaries using the tidycensus package and setting the geometry to true.\n\n\nCode\nsetwd(here())  #current working directory\n\n#csv tables for longitudinal data\ncensus20&lt;- read.csv(\"data/ltdb_std_2020_fullcount.csv\")\ncensus10&lt;- read.csv(\"data/LTDB_Std_2010_fullcount.csv\")\ncensus00&lt;- read.csv(\"data/LTDB_Std_2000_fullcount.csv\")\ncensus90&lt;- read.csv(\"data/LTDB_Std_1990_fullcount.csv\")\ncensus80&lt;- read.csv(\"data/LTDB_Std_1980_fullcount.csv\")\n\n#geometry data\n#filter for NYC counties (5 boroughs)\nnyc_counties &lt;- c(\"Kings\", \"Queens\", \"New York\", \"Richmond\", \"Bronx\")\ntract &lt;- get_decennial(geography = \"tract\",\n                       variables = \"P001001\",\n                       year = 2010,\n                       state = \"NY\",\n                       county = nyc_counties,\n                       geometry = TRUE,\n                       progress = FALSE)\n\n\nWe next calculate the share of White, Black, Hispanic, and Asian residents in each tract for each decade from the raw count using the total population as the denominator. We filter out tracts where the population is 0 and select only the relevant columns to create our data frame. We then join all columns from the five decennial data frames into one data frame called census_all and finally select only census tracts from the five counties that comprise New York City’s five boroughs: Bronx County, Kings County (Brooklyn), New York County (Manhattan), Queens County, Richmond County (Staten Island).\n\n\nCode\ncensus80 &lt;- census80 %&gt;% filter (POP80 &gt;0)\ncensus80$perwhite80 &lt;- census80$NHWHT80/census80$POP80\ncensus80$perblack80 &lt;- census80$NHBLK80/census80$POP80\ncensus80$perhisp80 &lt;- census80$HISP80/census80$POP80\ncensus80$perasian80 &lt;- census80$ASIAN80/census80$POP80\ncensus80&lt;- census80 %&gt;% select(c(\"TRTID10\",\"perwhite80\", \"perblack80\", \"perhisp80\", \"perasian80\"))\n\ncensus90 &lt;- census90 %&gt;% filter (POP90 &gt;0)\ncensus90$perwhite90 &lt;- census90$NHWHT90/census90$POP90\ncensus90$perblack90 &lt;- census90$NHBLK90/census90$POP90\ncensus90$perhisp90 &lt;- census90$HISP90/census90$POP90\ncensus90$perasian90 &lt;- census90$ASIAN90/census90$POP90\ncensus90&lt;- census90 %&gt;% select(c(\"TRTID10\",\"state\",\"county\",\"perwhite90\", \"perblack90\", \"perhisp90\", \"perasian90\"))\n\ncensus00 &lt;- census00 %&gt;% filter (POP00 &gt;0)\ncensus00$perwhite00 &lt;- census00$NHWHT00/census00$POP00\ncensus00$perblack00 &lt;- census00$NHBLK00/census00$POP00\ncensus00$perhisp00 &lt;- census00$HISP00/census00$POP00\ncensus00$perasian00 &lt;- census00$ASIAN00/census00$POP00\ncensus00&lt;- census00 %&gt;% select(c(\"TRTID10\",\"perwhite00\", \"perblack00\", \"perhisp00\", \"perasian00\"))\n\ncensus10 &lt;- census10 %&gt;% rename(\"TRTID10\" = \"tractid\")\ncensus10$perwhite10 &lt;- census10$nhwht10/census10$pop10\ncensus10$perblack10 &lt;- census10$nhblk10/census10$pop10\ncensus10$perhisp10 &lt;- census10$hisp10/census10$pop10\ncensus10$perasian10 &lt;- census10$asian10/census10$pop10\ncensus10&lt;- census10 %&gt;% select(c(\"TRTID10\",\"perwhite10\", \"perblack10\", \"perhisp10\", \"perasian10\"))\n\ncensus20 &lt;- census20 %&gt;% rename(\"TRTID10\" = \"TRTID2010\")\ncensus20$perwhite20 &lt;- census20$nhwt20/census20$pop20\ncensus20$perblack20 &lt;- census20$nhblk20/census20$pop20\ncensus20$perhisp20 &lt;- census20$hisp20/census20$pop20\ncensus20$perasian20 &lt;- census20$asian20/census20$pop20\ncensus20&lt;- census20 %&gt;% select(c(\"TRTID10\",\"perwhite20\", \"perblack20\", \"perhisp20\", \"perasian20\"))\n\n#join all data frames from each decade\ncensus_all&lt;- census90 %&gt;% left_join(census00) %&gt;% left_join(., census10) %&gt;% left_join(., census20)%&gt;% left_join(., census80)\n\n#Select NYC Counties. These include Bronx County, Kings County (Brooklyn), New York County (Manhattan), Queens County, Richmond County (Staten Island)\n\ncensus_select &lt;- census_all %&gt;% filter((state == \"NY\" & county == \"Bronx County\")|\n                              (state == \"NY\" & county == \"Kings County\")|\n                              (state == \"NY\" & county == \"New York County\")|\n                              (state == \"NY\" & county == \"Queens County\")|\n                              (state == \"NY\" & county == \"Richmond County\"))\n\n##remove NA values and state and county columns\ncensus_nyc &lt;- na.omit(census_select)%&gt;% select(-state, -county)\n\n#Select only the tractID column from the shapefile. Rename the field for ease of joining and convert to double to match the csv data.\ntract&lt;- tract %&gt;% select(\"GEOID\")\ntract&lt;- rename(tract, TRTID10 = GEOID)\ntract$TRTID10&lt;- as.double(tract$TRTID10)\n\n\n\n\nCode\n# Set tigris options to return the data in sf format (spatial data frame)\noptions(tigris_class = \"sf\")\n\n# Download county boundaries for New York state\nny_counties &lt;- counties(state = \"NY\", cb = TRUE,\n                         progress = FALSE)\n\n# Filter for only the New York City counties\nnyc_counties &lt;- ny_counties %&gt;%\n  filter(NAME %in% c(\"Bronx\", \"Kings\", \"New York\", \"Queens\", \"Richmond\"))\n\n# View the structure of the data\nprint(nyc_counties)\n\n\nSimple feature collection with 5 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -74.25563 ymin: 40.4961 xmax: -73.70036 ymax: 40.91771\nGeodetic CRS:  NAD83\n  STATEFP COUNTYFP COUNTYNS       AFFGEOID GEOID     NAME        NAMELSAD\n1      36      061 00974129 0500000US36061 36061 New York New York County\n2      36      047 00974122 0500000US36047 36047    Kings    Kings County\n3      36      081 00974139 0500000US36081 36081   Queens   Queens County\n4      36      085 00974141 0500000US36085 36085 Richmond Richmond County\n5      36      005 00974101 0500000US36005 36005    Bronx    Bronx County\n  STUSPS STATE_NAME LSAD     ALAND    AWATER                       geometry\n1     NY   New York   06  58683880  29010416 MULTIPOLYGON (((-74.00641 4...\n2     NY   New York   06 179684484  71158757 MULTIPOLYGON (((-74.04171 4...\n3     NY   New York   06 281594048 188444349 MULTIPOLYGON (((-73.96262 4...\n4     NY   New York   06 148982680 117441532 MULTIPOLYGON (((-74.16154 4...\n5     NY   New York   06 109235674  39353304 MULTIPOLYGON (((-73.77242 4..."
  },
  {
    "objectID": "SequencePaperSep24.html#sec-intuition",
    "href": "SequencePaperSep24.html#sec-intuition",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "Basic conceptual intuition",
    "text": "Basic conceptual intuition\nOur analysis features two fundamental steps. The first is the k-means clustering of the census tracts to derive multidimensional classes of neighborhoods containing similar racial and ethnic compositions. (Reibel and Regelson 2011) introduced the idea of using an unsupervised classification approach for studying neighborhood racial change as an alternative to the use of neighborhood diversity indices. The objective of the k-means algorithm is to group observations in such a way that maximizes the similarity of observations within groups or clusters while maximizing the dissimilarity between each cluster. In other words, the goal is to group neighborhoods so that those most similar to each other according to their racial and ethnic makeup are assigned to the same cluster and the clusters themselves are distinct from one another in terms of their makeup. With the k-means algorithm, the number of clusters, k must be determined a priori. To make this determination, it is customary to evaluate multiple solutions using various fit statistics in conjunction with domain and geographic knowledge of the data (Delmelle 2015). It is also commonly recommended that input variables first be normalized to avoid placing unequal emphasis on variables that may be on different measurement scales. However, in our case study, all of the racial and ethnic variables represent percentages of the population and so this step is not performed in the case study.\nOur ultimate goal is to understand the major pathways of neighborhood change and so each neighborhood will be classified five times for 1980, 1990, 2000, 2010, and 2020 to establish its longitudinal sequence. To ensure that the clusters are temporally stable, we will perform the clustering for all years at once. New neighborhood typologies may emerge over time with this approach. In that instance, only tracts from the later years would be assigned to the new cluster.\nLike k-means, sequence analysis is an unsupervised classification technique that aims to cluster similar longitudinal sequences. To determine the similarity of the sequences, a key step in this analysis is to create the dissimilarity measure. There are various approaches that can be used to determine the similarity of categorical sequences. (Studer and Ritschard 2016) provides a comprehensive overview of various techniques for determining sequences dissimilarity for social science applications. In this case study, we are most interested in the ordering or sequencing of neighborhood cross-sectional racial groups. Each neighborhood will have the same number of states, captured at the same decennial interval, which differs from studies of individuals progressing through a series of life course events, for example. In those cases, other considerations like the duration of time spent in each state or the timing of certain events may matter more in ultimately grouping the sequences based on similarity. Here we aim to create clusters of sequences that follow a similar ordering of events - progressing from example, a Majority White neighborhood through a Mixed Race state towards a Majority Hispanic state. The amount of time spent in each of these states might differ, but ultimately this describes how a neighborhood has changed over time. Given this, we follow (Delmelle 2017) and use a variation on the popular Optimal Matching (OM) algorithm called OMstrans. The OM algorithm is a string editing technique that determines the cost it would take to completely transform one sequence into another. This is achieved by either inserting, deleting, or substituting elements in one sequence until it matches another. For example, one neighborhood may have a sequence of White, White, Mixed Race, Hispanic while another neighborhood might follow the sequence White, White, Mixed Race, Mixed Race. Between these two strings, there is one entry that differs: the final state. To transform one to another, we could substitute Hispanic for Mixed Race in the second sequence, and the dissimilarity of the two sequences would be equal to the cost of that substitution. In the OMstrans variant, distances between sequences of transitions are computed. This means that each state is merged with its previous state to create a subsequence. In the previous illustrative example, the first sequence becomes (White-White, White-MixedRace, MixedRace-Hispanic) and the OM cost evaluation is then applied to these subsequences. This helps to ensure that the ordering of events is preserved in the sequence clusters. The importance given to the preservation of ordering is governed by the parameter w, the origin-transition parameter. When w = 1, OMstrans approximates the traditional OM algorithm. A lower value places greater emphasis on the ordering or sequencing of events."
  },
  {
    "objectID": "SequencePaperSep24.html#sec-application",
    "href": "SequencePaperSep24.html#sec-application",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "Application",
    "text": "Application\n\nStudy Area\nOur study area consists of census tracts within the five Boroughs of New York (see Figure @ref(fig:nyc-plot) for an overview map).\n\n\nCode\n# Filter for only the New York City counties\nnyc_counties &lt;- ny_counties %&gt;%\n  filter(NAME %in% c(\"Bronx\", \"Kings\", \"New York\", \"Queens\", \"Richmond\")) \n\n# Modify labels for specific counties\nnyc_counties$label_main &lt;- ifelse(nyc_counties$NAME == \"New York\", \"New York\", \n                                  ifelse(nyc_counties$NAME == \"Kings\", \"Kings\",\n                                         ifelse(nyc_counties$NAME == \"Richmond\", \"Richmond\", \n                                                nyc_counties$NAME)))\n\nnyc_counties$label_paren &lt;- ifelse(nyc_counties$NAME == \"New York\", \"(Manhattan)\", \n                                   ifelse(nyc_counties$NAME == \"Kings\", \"(Brooklyn)\",\n                                          ifelse(nyc_counties$NAME == \"Richmond\", \"(Staten Island)\", \n                                                 \"\")))\n\n# Calculate centroids for each county to get coordinates for labels\ncentroids &lt;- st_centroid(nyc_counties)\ncoords &lt;- st_coordinates(centroids)\n\n# Add the coordinates to the nyc_counties data frame\nnyc_counties &lt;- nyc_counties %&gt;%\n  mutate(X = coords[, 1],\n         Y = coords[, 2])\n\n# Adjust coordinates manually for specific counties\nnyc_counties &lt;- nyc_counties %&gt;% \n  mutate(\n    X = ifelse(NAME == \"New York\", X - 0.11, \n               ifelse(NAME == \"Richmond\", X + 0.012, X)), # Move \"New York\" left, Richmond right\n    Y = ifelse(NAME == \"New York\", Y + 0.005, \n               ifelse(NAME == \"Richmond\", Y + 0.03, Y)) # Adjust Richmond label higher\n  )\n\n#you can mask water area if you would like.\n#nyc_counties &lt;- nyc_counties %&gt;%  erase_water(area_threshold = 0.9)\n\n# Create the large map for the state without a scale bar\nzoomed_map &lt;- ggplot() +\n  geom_sf(data = ny_counties, fill = \"gray85\", color = \"white\", size = 1) + # New York State outline\n  geom_sf(data = nyc_counties, fill = \"#85B0A9\", color = \"white\", size = 3) + # NYC counties in teal\n  geom_segment(aes(x = -73.98, y = 40.775, xend = -74.03, yend = 40.775), \n               color = \"gray25\", size = 0.5) + # Line from New York label to the boundary\n  geom_text(data = nyc_counties, aes(x = X, y = Y, label = label_main), \n            color = \"black\", size = 4, family = \"Gill Sans MT\", fontface = \"bold\") + # Add main county names\n  geom_text(data = nyc_counties, aes(x = X, y = Y - 0.02, label = label_paren), \n            color = \"gray25\", size = 3.75, family = \"Gill Sans MT\") + # Add parentheses labels in lighter color\n  geom_text(aes(x = -73.6, y = 40.725, label = \"Nassau\"), \n            color = \"gray55\", size = 4, family = \"Gill Sans MT\", fontface = \"bold\") + # Corrected Nassau label position\n  geom_text(aes(x = -73.8, y = 40.98, label = \"Westchester\"), \n            color = \"gray55\", size = 4, family = \"Gill Sans MT\", fontface = \"bold\") + # Corrected Westchester label\n  geom_text(aes(x = -73.6, y = 40.705, label = \"(Long Island)\"), \n            color = \"gray70\", size = 3.5, family = \"Gill Sans MT\", fontface = \"bold\") + # Add Long Island label below Nassau\n  coord_sf(xlim = c(-74.25, -73.5), ylim = c(40.4, 41.05), expand = FALSE) + # Crop to focus on NYC\n  theme_minimal() +\n  theme(\n    panel.grid.major = element_blank(), # Remove major grid lines\n    panel.grid.minor = element_blank(), # Remove minor grid lines\n    axis.title = element_blank(), # Remove axis titles\n    axis.text = element_blank(), # Remove axis text (labels)\n    legend.position = \"none\", # Remove the legend\n    plot.margin = margin(0, 0, 0, 0) # Remove margins for a tighter crop\n  )\n\n# Create the large map for NY and surrounding counties with text annotation\ninset_map &lt;- ggplot() +\n  geom_sf(data = ny_counties, fill = \"gray90\", color = NA, size = 1) + # All counties in gray, including Nassau and Westchester\n  geom_sf(data = nyc_counties, fill = \"#569289\", color = \"#569289\", size = 5) + # NYC counties in darker teal\n  annotate(\"text\", x = -76.2, y = 42.8, label = \"New York State\", \n           size = 5.25, color = \"gray49\", angle = 0, \n           alpha = 0.7, family = \"Gill Sans MT\") + # Add text label\n  theme_minimal() +\n  theme(\n    panel.grid.major = element_blank(), # Remove major grid lines\n    panel.grid.minor = element_blank(), # Remove minor grid lines\n    plot.title = element_text(hjust = 0), # Align title to the left\n    plot.subtitle = element_text(hjust = 0), # Align subtitle to the left\n    axis.title = element_blank(), # Remove axis titles\n    axis.text = element_blank(), # Remove axis text (labels)\n    plot.margin = margin(0, 0, 0, 0) # Tighten margins\n  )\n\n# Combine the maps, placing the inset map within the zoomed-in map\nfinal_plot &lt;- ggdraw() +\n  draw_plot(zoomed_map) +\n  draw_plot(inset_map, x = 0.07, y = 0.65, width = 0.3, height = 0.3) # Adjust position and size of the inset\n\n# Display the combined plot\nprint(final_plot)\n\n\n\n\n\nOverview map of New York City’s five boroughs and surrounding counties.\n\n\n\n\nTo begin our case study, we start by preparing the data for the k-means clustering. This involves pivoting the data frame so that each census tract is represented with five distinct rows, once for each decennial value. To do so, we pivot from a wide to a long format and select out just the four race and ethnicity values to be used in the clustering.\n\n\nCode\n# Convert the data frame from wide to long format\ncensus_long &lt;- census_nyc %&gt;%\n  pivot_longer(cols = starts_with(\"per\"), \n               names_to = c(\".value\", \"year\"), \n               names_pattern = \"per(\\\\w+)(\\\\d{2})\") %&gt;%\n  mutate(year = case_when(\n    year == \"80\" ~ 1980,\n    year == \"90\" ~ 1990,\n    year == \"00\" ~ 2000,\n    year == \"10\" ~ 2010,\n    year == \"20\" ~ 2020,\n    TRUE ~ as.integer(year)\n  ))\n\n\ndata_for_clustering &lt;- census_long %&gt;%\n  select(white, black, hisp, asian)\n\n\nAs explained above, the k-means clustering procedure requires that the number of clusters, k be specified a priori. There are fit statistics that attempt to determine the optimal number of clusters, considering the similarity of observations within each cluster and the distinctiveness of the clusters from each other. However, these mathematically-derived solutions are devoid of any contextual or theoretical understanding of the problem under study. Therefore, the selection of k often becomes more akin to art than a science (Von Luxburg, Williamson, and Guyon 2012), considering the objective of the study. We begin with two common data-driven approaches that explore multiple clustering solutions for different k values and then examines the within sum of squares (WSS) and the average silhouette score for each solution. The WSS assesses how compact a clustering solution is, or how homogeneous the observations assigned to each cluster are, and the average silhouette score measures how well separated each cluster is from each other. Our objective is to derive a typology of neighborhoods according to their racial and ethnic makeup, for four groups: percent White, Black, Hispanic, and Asian. Figure @ref(fig:clustering-analysis) shows the results of the clustering analysis: (a) the Elbow method plot suggests the optimal number of clusters, and (b) the Silhouette method plot helps validate the cluster separation.\n\n\nCode\n# Now do the k-means clustering on all\n\ndata_for_clustering &lt;- census_long %&gt;%\n  select(white, black, hisp, asian)\n\n# Function to calculate total within-cluster sum of squares for different k\nwss &lt;- function(k) {\n  kmeans(data_for_clustering, k, nstart = 10)$tot.withinss\n}\n\n# Compute and plot wss for k = 1 to k = 10\nk.values &lt;- 1:10\nwss_values &lt;- map_dbl(k.values, wss)\n\n# Elbow method plot\nplot(k.values, wss_values, type = \"b\", pch = 19, frame = FALSE,\n     xlab = \"Number of clusters K\",\n     ylab = \"Total within-clusters sum of squares\")\n\n# Silhouette method for determining the optimal number of clusters\nfviz_nbclust(data_for_clustering, kmeans, method = \"silhouette\")\n\n\n\n\n\n(a) Elbow method plot\n\n\n\n\n\n\n\n(b) Silhouette method plot\n\n\n\nClustering Analysis: (a) Elbow method plot, (b) Silhouette method plot.\n\n\n\nExploring k-means Cluster Solutions\nAccording to these plots, the mathematically optimal number of neighborhood clusters for racial makeup is three. We can further explore the makeup of neighborhoods within these three clusters a few ways to determine if, in fact, three clusters provides a meaningful segmentation of four distinct racial and ethnic groups. In the plots below, we can visualize the average silhouette value for each cluster. The Silhouette values range from -1 to 1; values close to 1 suggest that the observations are well clustered while negative values suggest that an observation might be assigned to the wrong cluster. From the plot, Clusters 2 and 3 appears to be the most cohesive clusters, with average silhouette widths of 0.64, while cluster 1 has some potentially poorly classified neighborhoods. Descriptions of the racial and ethnic makeup of the clusters are obtained from the associated stacked bar charts. We can see that Cluster 1 is characterized as being nearly 50 percent Hispanic, with near equal shares of Whites, Blacks, and Asians. Cluster 2 is majority Black with approximately 15 percent Hispanics and few Whites and Asians. Finally, Cluster 3 is majority White. Therefore, this segmentation provides us with clusters indicating the dominant racial groups, but may miss some nuances of other racial and ethnic neighborhood compositions. We can therefore explore how increasing k may portray a richer portrait of neighborhood demographic profiles. Figure @ref(fig:three-clusters) shows the cluster analysis results, with (a) illustrating the Silhouette Analysis to assess cluster separation, and (b) depicting the demographic makeup of the three clusters.\n\n\nCode\n# Assume the optimal number of clusters (k) is 3 from the previous steps\nset.seed(123)\nkmeans_result &lt;- kmeans(data_for_clustering, centers = 3, nstart = 25)\n\n# Add the cluster assignments to the original data\ncensus_long$cluster &lt;- kmeans_result$cluster\n\n# Silhouette Analysis\nsil &lt;- silhouette(kmeans_result$cluster, dist(data_for_clustering))\nfviz_silhouette(sil)\n\n\n  cluster size ave.sil.width\n1       1 3284          0.33\n2       2 2478          0.64\n3       3 4848          0.64\n\n\nCode\n# Extract silhouette information to a data frame (df)\nsil_df &lt;- as.data.frame(sil[, 1:3])\ncolnames(sil_df) &lt;- c(\"Cluster\", \"Silhouette Width\", \"Neighboring Cluster\")\n\n# Cluster profiles\ncluster_profiles &lt;- census_long %&gt;%\n  group_by(cluster) %&gt;%\n  summarise(across(c(white, black, hisp, asian), ~ round(mean(.), 2)))\n\n# Print the table as a formatted table\nkable(cluster_profiles, caption = \"Cluster Profiles: Average Demographics\", \n      col.names = c(\"Cluster\", \"White\", \"Black\", \"Hispanic\", \"Asian\"),\n      format = \"markdown\")\n\n\n\nCluster Profiles: Average Demographics\n\n\nCluster\nWhite\nBlack\nHispanic\nAsian\n\n\n\n\n1\n0.15\n0.18\n0.50\n0.15\n\n\n2\n0.07\n0.75\n0.14\n0.02\n\n\n3\n0.73\n0.04\n0.12\n0.10\n\n\n\n\nSilhouette Analysis\n\n\n\nCode\n# Reshape the data from wide to long format\ncluster_profiles_long &lt;- cluster_profiles %&gt;%\n  pivot_longer(cols = c(\"white\", \"black\", \"hisp\", \"asian\"), \n               names_to = \"Demographic\", values_to = \"Proportion\")\n\n# Create the stacked bar chart\nggplot(cluster_profiles_long, aes(x = factor(cluster), y = Proportion, fill = Demographic)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Cluster Demographic Makeup - 3 clusters\", x = \"Cluster\", y = \"Proportion\") +\n  scale_fill_brewer(palette = \"Set3\") +  # Adjust color palette if desired\n  theme_minimal()\n\n\n\n\n\n(a) Silhouette Analysis\n\n\n\n\n\n\n\n(b) Cluster Demographic Makeup\n\n\n\nCluster Analysis Results: (a) Silhouette Analysis and (b) Cluster Demographic Makeup.\n\nNext, we compare 4,5,and 6 cluster solutions. We can see that the average silhouette of the solutions declines as the number of clusters increases. The demographic profiles show several new neighborhood typologies emerge with more clusters added. With a four cluster solution, we observe neighborhood typologies for each of the three dominant racial and ethic groups: White, Hispanic, and Black along with one mixed neighborhood type, shown in cluster 4. As expected, that cluster displays the lowest silhouette value, with some potentially mis-classified neighborhoods. The 5 cluster solution adds a cluster showing a majority Asian population, alongside two majority White populations - one showing more diversity than the other), and a majority Black, and Hispanic group. Finally, a 6 cluster solution shows more racially mixed groups, but at the expense of less well-defined or separated clusters. In the code below, each variable name ends with a number (4, 5 or 6), indicating which number of clusters (k) it represents. Figure @ref(fig:silhouette-analysis) displays the silhouette analysis results for clustering into (a) four clusters, (b) five clusters, and (c) six clusters, illustrating the cohesion and separation of clusters at different sizes.\n\n\nCode\n# Perform k-means clustering for 4, 5, and 6 clusters\nset.seed(123)\nkmeans_4 &lt;- kmeans(data_for_clustering, centers = 4, nstart = 25)\nkmeans_5 &lt;- kmeans(data_for_clustering, centers = 5, nstart = 25)\nkmeans_6 &lt;- kmeans(data_for_clustering, centers = 6, nstart = 25)\n\n# Add cluster assignment to original data\ncensus_long$cluster_4 &lt;- kmeans_4$cluster\ncensus_long$cluster_5 &lt;- kmeans_5$cluster\ncensus_long$cluster_6 &lt;- kmeans_6$cluster\n\n# Silhouette analysis for 4, 5, and 6 clusters\nsil_4 &lt;- silhouette(kmeans_4$cluster, dist(data_for_clustering))\nsil_5 &lt;- silhouette(kmeans_5$cluster, dist(data_for_clustering))\nsil_6 &lt;- silhouette(kmeans_6$cluster, dist(data_for_clustering))\n\n# Plot silhouette for 4 clusters\nplot_4 &lt;- fviz_silhouette(sil_4) + ggtitle(\"Silhouette Plot - Four Clusters\")\n\n\n  cluster size ave.sil.width\n1       1 2091          0.49\n2       2 2431          0.64\n3       3 2265          0.20\n4       4 3823          0.64\n\n\nCode\n# Plot silhouette for 5 clusters\nplot_5 &lt;- fviz_silhouette(sil_5) + ggtitle(\"Silhouette Plot - Five Clusters\")\n\n\n  cluster size ave.sil.width\n1       1 2130          0.48\n2       2 3002          0.64\n3       3  870          0.33\n4       4 2417          0.64\n5       5 2191          0.24\n\n\nCode\n# Plot silhouette for 6 clusters\nplot_6 &lt;- fviz_silhouette(sil_6) + ggtitle(\"Silhouette Plot - Six Clusters\")\n\n\n  cluster size ave.sil.width\n1       1 1667          0.68\n2       2 2152          0.27\n3       3  843          0.34\n4       4 2903          0.63\n5       5 1246          0.26\n6       6 1799          0.46\n\n\nCode\n# Combine the three plots into a faceted view\ngrid.arrange(plot_4, plot_5, plot_6, ncol = 1)\n\n\n\n\n\n(a) Four Clusters\n\n\n\nSilhouette Analysis for Different Cluster Sizes: (a) Four Clusters, (b) Five Clusters, and (c) Six Clusters.\n\nFigure @ref(fig:demographic-makeup) illustrates the demographic composition of clusters for different clustering solutions: (a) four clusters, (b) five clusters, and (c) six clusters, highlighting how demographic groups are distributed across various cluster labels.\n\n\nCode\n# We need to hard code the labels to be able to compare the demographic profile of each solution. This is because R randomly assigns the label each time, even if the clustering solution is the same because we set the seed.\nlabel_clusters &lt;- function(cluster_profiles) {\n  cluster_profiles %&gt;%\n    mutate(\n      label = case_when(\n        white &gt; 0.75 ~ \"3 White\",\n        hisp &gt; 0.45 ~ \"2 Hispanic\",\n        black &gt; 0.75 ~ \"1 Black\",\n        asian &gt; 0.45 ~ \"5 Asian\",\n        white &lt; 0.56 & hisp &gt; 0.20 & black &lt; 0.20 ~ \"4 Mixed\",\n        black &gt; 0.49 & hisp &gt; 0.25 & white &lt; 0.15 ~ \"6 Black and Hispanic\",\n        TRUE ~ \"Other\"  # Default label if none of the conditions are met\n      )\n    )\n}\n\n# Create cluster profiles and label them according to your custom rules\ncluster_profiles_4 &lt;- census_long %&gt;%\n  group_by(cluster_4) %&gt;%\n  summarise(across(c(white, black, hisp, asian), ~ round(mean(.), 2))) %&gt;%\n  mutate(`Clustering_Solution` = \"4 Clusters\", Cluster = cluster_4) %&gt;%\n  label_clusters()\n\ncluster_profiles_5 &lt;- census_long %&gt;%\n  group_by(cluster_5) %&gt;%\n  summarise(across(c(white, black, hisp, asian), ~ round(mean(.), 2))) %&gt;%\n  mutate(`Clustering_Solution` = \"5 Clusters\", Cluster = cluster_5) %&gt;%\n  label_clusters()\n\ncluster_profiles_6 &lt;- census_long %&gt;%\n  group_by(cluster_6) %&gt;%\n  summarise(across(c(white, black, hisp, asian), ~ round(mean(.), 2))) %&gt;%\n  mutate(`Clustering_Solution` = \"6 Clusters\", Cluster = cluster_6) %&gt;%\n  label_clusters()\n\n# Combine all cluster profiles into one table\ncluster_profiles_combined &lt;- bind_rows(cluster_profiles_4, cluster_profiles_5, cluster_profiles_6)\n\n# Map the labels back to the original tracts by joining based on cluster assignments\ncensus_long &lt;- census_long %&gt;%\n  left_join(cluster_profiles_4 %&gt;% select(Cluster, label) %&gt;% rename(label_4 = label), by = c(\"cluster_4\" = \"Cluster\")) %&gt;%\n  left_join(cluster_profiles_5 %&gt;% select(Cluster, label) %&gt;% rename(label_5 = label), by = c(\"cluster_5\" = \"Cluster\")) %&gt;%\n  left_join(cluster_profiles_6 %&gt;% select(Cluster, label) %&gt;% rename(label_6 = label), by = c(\"cluster_6\" = \"Cluster\"))\n\n# Reshape data for plotting\ncluster_profiles_long &lt;- cluster_profiles_combined %&gt;%\n  pivot_longer(cols = c(\"white\", \"black\", \"hisp\", \"asian\"),\n               names_to = \"Demographic\", values_to = \"Proportion\")\n\n# Plot stacked bar charts of demographic makeup for each labeled cluster\nggplot(cluster_profiles_long, aes(x = label, y = Proportion, fill = Demographic)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  facet_grid(Clustering_Solution ~ ., scales = \"free_x\") +  # Facet vertically by clustering solution\n  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n  labs(\n    title = \"Demographic Makeup of Labeled Clusters in Different Clustering Solutions\",\n    x = \"Cluster Label\",\n    y = \"Proportion of Demographic Group\",\n    fill = \"Demographic Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\n\n(a) Four Clusters\n\n\n\nDemographic Makeup of Labeled Clusters for Different Clustering Solutions: (a) Four Clusters, (b) Five Clusters, and (c) Six Clusters.\n\nWe can explore how this plays out for a specific observation. For example, take the first census tract in the data frame for the year 2020. This tract’s racial composition was 58% Black and 30% Hispanic with small shares of Whites and Asians. With the four cluster solution, this tract was classified into class 1, Majority Black. For the five cluster solution, it was also classified as Majority Black, and for the six cluster solution, Black and Hispanic. In 1990, that same tract was 34% black and 61% Hispanic, resulting in the tract being classified as Majority Hispanic by all three clustering solutions. When looking at change over time, the neighborhood will either be registered as transitioning from Majority Hispanic to either Majority Black or Black and Hispanic, depending on the final cluster solution. In this instance, the 6 cluster solution provides a more accurate portrayal of the dynamics - while the neighborhood did technically become majority Black, there is still a significant Hispanic presence, a detail that would have been omitted by limiting the number of groups.\nFinally, we can examine the spatial distribution of these clustering solutions to help aid in the final determination for the sequence analysis. Since we did the cluster analysis on all decades, for this purpose, we will contrast the 4, 5, and 6 cluster solutions just for 2020. All three maps depict a similar spatial pattern, but with a more fragmented pattern in the case of the 6 cluster solution. For example, the first two maps show contiguous tracts of the predominantly Black cluster, but the third map shows the emergence of the Black and Hispanic group largely forming on the outskirts of this spatial cluster. Another aparent distinction is the large spatial cluster of the Asian cluster in Queens, which had been labeled as Mixed in the 4 cluster solution.\nTo better understand details on racial neighborhood transitions, we will go with the larger number of clusters, 6, despite the mathematical preference for a 3 cluster solution. Figure @ref(fig:demographic-distribution) shows the demographic distribution of labeled clusters for different clustering solutions: (a) four clusters, (b) five clusters, and (c) six clusters.\n\n\nCode\n# Filter data for the year 2020 and merge labels with tract data for mapping\ntract_clusters_2020 &lt;- tract %&gt;% erase_water(area_threshold = 0.9) %&gt;%\n  left_join(census_long %&gt;%\n              filter(year == 2020) %&gt;%  # Filter for the year 2020\n              select(TRTID10, cluster_4, cluster_5, cluster_6, label_4, label_5, label_6), by = \"TRTID10\") %&gt;%\n  pivot_longer(cols = c(\"cluster_4\", \"cluster_5\", \"cluster_6\"),\n               names_to = \"ClusterSolution\", values_to = \"Cluster\") %&gt;%\n  pivot_longer(cols = c(\"label_4\", \"label_5\", \"label_6\"),\n               names_to = \"LabelSolution\", values_to = \"Label\") %&gt;%\n  filter(str_replace(ClusterSolution, \"cluster_\", \"\") == str_replace(LabelSolution, \"label_\", \"\")) %&gt;%\n  mutate(Label = factor(Label)) %&gt;%\n  mutate(ClusterSolution = recode(ClusterSolution,\n                                  \"cluster_4\" = \"4 Clusters\",\n                                  \"cluster_5\" = \"5 Clusters\",\n                                  \"cluster_6\" = \"6 Clusters\")) %&gt;%\n  mutate(ClusterSolution = factor(ClusterSolution, levels = c(\"4 Clusters\", \"5 Clusters\", \"6 Clusters\")))\n\n# Create the base plot with the labeled clusters\nbase_plot &lt;- ggplot(tract_clusters_2020) +\n  geom_sf(aes(fill = Label), color = NA) +  # Use the Label field for fill\n  geom_sf(data = nyc_counties, fill = NA, color = \"black\", size = 0.5) +  # Add county outlines\n  facet_wrap(~ ClusterSolution, nrow = 1) +  # Facet horizontally by clustering solution\n  scale_fill_manual(values = c(\"3 White\" = \"#F0E442\", \"2 Hispanic\" = \"#D55E00\", \"1 Black\" = \"#0072B2\",\n                               \"5 Asian\" = \"#CC79A7\", \"4 Mixed\" = \"#009E73\", \"6 Black and Hispanic\" = \"#56B4E9\")) +  # Custom colors for each label\n  labs(x = \"\", y = \"\") +  # Remove the title\n  theme_void() +\n  theme(\n    strip.text = element_text(hjust = .5, vjust = .1, face = \"italic\", size = 12),  # Center facet labels\n    legend.position = \"bottom\",  # Place the legend at the bottom\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 8)\n  ) +\n  guides(fill = guide_legend(nrow = 1, byrow = TRUE))  # Combine all legend entries into a single row\n\n# Display the plot\ngrid.arrange(base_plot)\n\n\n\n\n\n(a) Four Clusters\n\n\n\nDemographic Distribution of Labeled Clusters for Different Clustering Solutions: (a) Four Clusters, (b) Five Clusters, and (c) Six Clusters.\n\nWe can begin with a simple exploration of the spatial changes over time in the maps showing the six clusters from 1980-2020 in a series of small multiples. From these maps, we can pick out some general spatial patterns over time. For example, we can see the expanse of neighborhoods classified as majority White from 1980 significantly diminishes by 2020. The share of Hispanics is shown to increase over time in the northern sections of the City. Towards the East, we see neighborhoods generally transition from predominantly White in 1980 to White and Mixed Race and eventually to Asian by 2020. There are also some evident stable clusters. For instance, the two clusters of predominantly black neighborhoods in the South and Southeast appear quite table over time. However, the cluster of majority Black neighborhoods in towards the north of Manhattan is diminished, replaced by a Black and Hispanic classification.\n\n\nCode\ndecades &lt;- c(1980, 1990, 2000, 2010, 2020)\n\n\n# Filter and prepare data for mapping\ntract_clusters_decades &lt;- tract %&gt;%\n  left_join(census_long %&gt;%\n              select(TRTID10, year, label_6), by = \"TRTID10\") %&gt;%\n  filter(!is.na(label_6)) \n\n# Set factor levels for year to ensure proper ordering\ntract_clusters_decades &lt;- tract_clusters_decades %&gt;%\n  mutate(year = factor(year, levels = decades))\n\n# Plot faceted maps for each decade (year)\nggplot(tract_clusters_decades) +\n  geom_sf(aes(fill = label_6), color = NA) +  # Use factor to ensure proper color assignment\n  geom_sf(data = nyc_counties, fill = NA, color = \"black\", size = 0.5) +  # Add county outlines\n  facet_wrap(~ year, ncol = 5) +  # Facet by year with 5 columns\n  scale_fill_manual(values = c(\"3 White\" = \"#F0E442\", \"2 Hispanic\" = \"#D55E00\", \"1 Black\" = \"#0072B2\",\n                               \"5 Asian\" = \"#CC79A7\", \"4 Mixed\" = \"#009E73\", \"6 Black and Hispanic\" = \"#56B4E9\"),\n                    name = \"\") +  # Add a name for the legend\n  labs(title = \"6-Cluster Solution for Each Decade\", x = \"\", y = \"\") +\n  theme_void() +\n  theme(\n    plot.title = element_text(hjust = 0, color = \"gray\"),  # Set the title color to gray\n    legend.position = \"bottom\",  # Move legend to the bottom\n    legend.direction = \"horizontal\",  # Make the legend horizontal\n    legend.title = element_text(size = 10),  # Adjust legend title size\n    legend.key.size = unit(0.6, \"cm\"),  # Set consistent size for legend boxes\n    legend.key.height = unit(0.6, \"cm\"),  # Set consistent height for legend boxes\n    legend.key.width = unit(0.5, \"cm\")  # Set consistent width for legend boxes\n  ) +\n  guides(fill = guide_legend(nrow = 1, byrow = TRUE)) \n\n\n\n\n\n\n\nSequence Analysis\nOur objective with the sequence classification is to come up with a typology of neighborhood sequences over time to describe general pathways of change. Each neighborhood has a sequence of classes over time, one of 6 categorical groups for each of the five decennial census values from 1980-2020. The first step in the analysis is to convert the data frame into a sequence for each neighborhood. We can see an illustrative example of the longitudinal sequences from the first five records. Classes are separated by a dash (-). There are 2122 sequences in the dataset and 197 unique sequences; all sequences are displayed in the plot below. Thus, the purpose of clustering the sequences is to extract the general patterns present from the set of all sequences.\n\n\nCode\n# Convert the data from long to wide format to have a sequence for each neighborhood\n# Assuming census_long is your data frame\ncensus_wide &lt;- tract_clusters_decades %&gt;%\n  st_drop_geometry() %&gt;%\n  select(TRTID10, year, label_6) %&gt;%\n  pivot_wider(names_from = year, values_from = label_6)\n\n# Rename the columns to show only the year (remove \"cluster_\" prefix if it was added during previous steps)\ncolnames(census_wide) &lt;- sub(\"cluster_\", \"\", colnames(census_wide))\n\n# Ensure columns are in the correct order by year\ncensus_wide &lt;- census_wide %&gt;%\n  select(TRTID10, `1980`, `1990`, `2000`, `2010`, `2020`)\n\n# Ensure the sequence columns are factors\ncensus_wide &lt;- census_wide %&gt;%\n  mutate(across(starts_with(\"19\") | starts_with(\"20\"), as.factor))\n\n# Check the distinct states (categories) in your sequences\nunique_states &lt;- unique(unlist(census_wide[, -1]))  # Exclude TRTID10 column\nnum_states &lt;- length(unique_states)\nprint(unique_states)\n\n\n[1] 6 Black and Hispanic 2 Hispanic           4 Mixed             \n[4] 3 White              1 Black              5 Asian             \nLevels: 1 Black 2 Hispanic 3 White 4 Mixed 5 Asian 6 Black and Hispanic\n\n\nCode\nprint(num_states)  # Number of unique states\n\n\n[1] 6\n\n\nCode\n# Define the custom color palette with the correct colors\ncustom_palette &lt;- c(\n  \"1 Black\" = \"#0072B2\",\n  \"2 Hispanic\" = \"#D55E00\",\n  \"3 White\" = \"#F0E442\",\n  \"4 Mixed\" = \"#009E73\",\n  \"5 Asian\" = \"#CC79A7\",\n  \"6 Black and Hispanic\" = \"#56B4E9\"\n)\n\n\n# Create the sequence object with the renamed columns\nsequence_data &lt;- seqdef(census_wide[, -1], cpal = custom_palette)  # Exclude the TRTID10 column\n\n# Check the number of distinct sequences\nnum_sequences &lt;- seqtab(sequence_data, idx = 0) %&gt;% nrow\nprint(num_sequences)\n\n\n[1] 197\n\n\nCode\n# Display the first few sequences\nhead(sequence_data)\n\n\n  Sequence                                                                                      \n1 6 Black and Hispanic-2 Hispanic-6 Black and Hispanic-6 Black and Hispanic-6 Black and Hispanic\n2 2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic                                        \n3 2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic                                        \n4 2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic                                        \n5 2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic-2 Hispanic                                        \n6 4 Mixed-2 Hispanic-2 Hispanic-2 Hispanic-5 Asian                                              \n\n\nCode\n# Plot the sequences\nseqIplot(sequence_data,                                             # Sequence object\n         with.legend = \"right\",                                # Display legend on right side of plot\n         cex.legend = 0.6,                                     # Change size of legend\n         main = \"Neighborhood Racial and Ethnic Trajectories\") # Plot title\n\n\n\n\n\nThe next objective is to compute the dissimilarity between all sequences. As described previously, we use the OMstrans algorithm to preserve the ordering of events as we are most interested in describing how neighborhoods have generally transitioned over time. We set a low value (0.1) for the parameter otto in the seqdist command which is the origin-transition trade-off weight. This emphasizes the ordering of sequence states. We also set a high indel cost of 3. Finally, substitution costs are a function of the transition rate TRATE between states. This places a lower cost on more frequent transitions.\nOnce the cost matrix is established, we then cluster the sequences using the dissimilarity matrix as an input to generate the typology. We follow an iterative process in determining the optimal solution like the one described above for the k means clustering. In short, multiple solutions are tested and the resulting sequence clusters are visualized to inspect for heterogeneity. Because our clustering and distance matrix are optimized for describing transitions over time, we end up with one cluster that contains all neighborhoods that remained constant over time. These sequences are very different from one another in the neighborhood types they describe, but they all represent a pathway or sequences of no change.\nTo describe the resulting sequence clusters, we plot a Sequence Frequency Plot for each cluster. We settled on 14 trajectory clusters describing neighborhood racial and ethnic transitions from 1980 to 2020 in New York City. The Sequence Frequency Plots illustrate the sequences belonging to each cluster and the sequence bars are scaled to visualize the frequency of each sequence. A summary of the trajectories is as follows:\n\nHispanic Majority to Black and Hispanic\nStability Cluster\nWhite and Mixed Race to Hispanic Majority\nWhite to White and Mixed Race to Hispanic Majority\nBlack and Hispanic to Hispanic Majority\nWhite Majority to White and Mixed Race\nWhite and Mixed Race to Black and Hispanic\nBlack and Hispanic to Black Majority\nWhite and Mixed Race to Asian Majority\nWhite and Mixed Race to White Majority\nBlack and Hispanic to White and Mixed Race\nWhite and Mixed Race to Asian Majority\nBlack Majority to Black and Hispanic\nBlack and Hispanic to Asian Majority\n\n\n\nCode\n# Pass this palette to seqdef\n# Define sequence data with custom color palette\nsequence_data &lt;- seqdef(census_wide[, -1], cpal = custom_palette)  # Exclude the TRTID10 column\n\n# Compute Optimal Matching (OM) distances using the TRATE cost method\ncosts &lt;- seqcost(sequence_data, method = \"TRATE\")\nom_distances &lt;- seqdist(sequence_data, method = \"OMstran\", indel = 3, sm = costs$sm, otto = 0.1)\n\n# Perform hierarchical clustering using Ward's method on the OM distances\nclusterward &lt;- agnes(om_distances, diss = TRUE, method = \"ward\")\n\n# Define the number of clusters and assign clusters to the sequence data\nnum_clusters &lt;- 14\nclusters &lt;- cutree(clusterward, k = num_clusters)\ncensus_wide$sequence_cluster &lt;- clusters\n\n# Define cluster names for reference\ncluster_names1 &lt;- c(\n  \"1 Black & Hispanic to Hispanic Majority\", \n  \"2 Stability\", \n  \"3 White Mixed Race to Hispanic\", \n  \"4 White to Mixed Race to Hispanic Majority\", \n  \"5 Majority White to Increasing Diversity\"\n)\n\n# Plot sequences for clusters in groups, adjusting legend settings\nplot_sequence_clusters &lt;- function(cluster_range) {\n  seqfplot(\n    sequence_data[census_wide$sequence_cluster %in% cluster_range, ], \n    group = census_wide$sequence_cluster[census_wide$sequence_cluster %in% cluster_range], \n    sortv = \"from.start\", \n    border = NA, \n    with.legend = \"right\",         # Place the legend on the right\n    legend.prop = 0.2,             # Set the proportion of the plot area for the legend\n    legend.border = FALSE          # Remove the border around the legend\n  )\n}\n\n# Plot sequences for specified cluster ranges\nplot_sequence_clusters(1:2)\n\n\n\n\n\nCode\nplot_sequence_clusters(3:4)\n\n\n\n\n\nCode\nplot_sequence_clusters(5:6)\n\n\n\n\n\nCode\nplot_sequence_clusters(7:8)\n\n\n\n\n\nCode\nplot_sequence_clusters(9:10)\n\n\n\n\n\nCode\nplot_sequence_clusters(11:12)\n\n\n\n\n\nCode\nplot_sequence_clusters(13:14)\n\n\n\n\n\nOf these 14 pathways, there are 3 that lead to the formation of a neighborhood transitioning into a Hispanic Majority cluster by 2020. This includes Cluster 3 - showing neighborhoods that went from being a slight majority White, but with a mixture of other races in 1980 and 1990 to transitioning to majority Hispanic by 1990 or 2000. Some of these sequences indicate a continued transition towards becoming majority Asian in the later years. Further segmenting the sequences into more clusters may have separated out those trajectories, but for the sake of brevity, we leave them mixed in. Spatially, these are shown in orange on the map below and can be see clustered in Staten Island, Queens, and in the Northern portion of the city. They are also notably adjacent to neighborhoods indicated by the red color, those representing sequence cluster 4, transitioning from majority White to White and Mixed Race and then to Majority Hispanic. This latter cluster might represent the precursor to cluster 3, but are neighborhoods that made this transition from majority White later, where the changes took time to spatially spillover to adjacent neighborhoods, as indicated by the map. Both of these pathways depict a transition from largely White populations to largely Hispanic.\nThe third pathway depicting a transition to majority Hispanic is distinct. It is represented by cluster 5 showing a transition from either majority Black neighborhoods towards a mixed Hispanic and Black group and eventually majority Hispanic or, beginning the 1980 time stamp, in a more mixed Black and Hispanic state. Geographically, these neighborhoods are shown more in the northern sections of Manhattan and the Bronx.\nFrom these two sets of sequence clusters, we can see that majority Hispanic neighborhoods in New York City have emerged out of either majority Black or Majority White neighborhoods over time.\n\n\n\n\n\nNeighborhoods Following Pathway to Hispanic Majority with White County Borders.\n\n\n\n\nThere are also 3 pathways leading to an Asian majority neighborhood type. These include clusters 9 and 12 which are also likely continuations of longer trajectories, that show a gradual transition from Majority White to White mixed race and eventually to Asian Majority. Geographically, these are clustered in the northern section of Queens. Sequence cluster 14 is more distinct in that the Asian majority transitioned from the Black and Hispanic mixed group and spatially, they are generally located in upper Manhattan and the Bronx.\n\n\n\n\n\nThere are two pathways for increasing both Black and White shares in a neighborhoods. Neighborhoods that became increasingly White either followed a trajectory from White mixed race to majority White (Cluster 10) or from either all Black or Black and Hispanic to White and Mixed race (11). Notably, this transition largely took place within the past 1-2 decades, aligning with when gentrification trends became accentuated in some cities, including New York. We see a clear cluster of this latter group in Brooklyn, a borough whose gentrification trends have been well documented (Chronopoulos 2020; Halasz 2023).\nFor the case of increasing Black populations, Cluster 1 shows a pathway from Hispanic majority to mixed Black and Hispanic and Cluster 8 shows a gradual transition from Black and Hispanic to majority Black; a trend that largely begin towards the middle of the study period, around the 2000 census data mark. Spatially, the former is more dispersed, while the latter is depicted more clearly in the southern neighborhoods of Brooklyn.\n\n\nCode\n# Filter data for Increasing White (clusters 10 and 11)\nincreasing_white_clusters &lt;- census_wide %&gt;%\n  filter(sequence_cluster %in% c(10, 11))  # Clusters 10 and 11 for increasing White\n\n# Filter data for Increasing Black (clusters 1 and 8)\nincreasing_black_clusters &lt;- census_wide %&gt;%\n  filter(sequence_cluster %in% c(1, 8))  # Clusters 1 and 8 for increasing Black\n\n# Join the filtered data with the tract shapefile for each group\ntract_increasing_white &lt;- tract %&gt;%\n  left_join(increasing_white_clusters, by = \"TRTID10\")  # Join spatial data for increasing White\n\ntract_increasing_black &lt;- tract %&gt;% \n  left_join(increasing_black_clusters, by = \"TRTID10\")  # Join spatial data for increasing Black\n\n# Adjust plotting settings to improve map visibility\n# Create the map for Increasing White, zoomed in on the five boroughs\nmap_increasing_white &lt;- ggplot(tract_increasing_white) +\n  geom_sf(aes(fill = factor(sequence_cluster)), color = NA) +  # Map sequence clusters\n  scale_fill_manual(values = c(\"#8DD3C7\", \"#FFFFB3\"),  # Custom color palette for White clusters\n                    labels = c(\"White Mixed Race to Majority White\", \n                               \"Black and Hispanic to White Mixed Race\"), \n                    name = \"Increasing White Pathway\") +\n  coord_sf(xlim = c(-74.3, -73.7), ylim = c(40.5, 40.9), expand = FALSE) +  # Zoom into the NYC area\n  theme_void() +\n  theme(legend.position = \"right\",  # Place legend at the right\n        legend.direction = \"vertical\",  # Arrange legend items vertically\n        legend.title = element_text(size = 12),  # Customize legend title size\n        legend.key.width = unit(2, \"cm\"),\n        legend.box = \"vertical\")  # Place legend title on top\n\n# Create the map for Increasing Black, zoomed in on the five boroughs\nmap_increasing_black &lt;- ggplot(tract_increasing_black) +\n  geom_sf(aes(fill = factor(sequence_cluster)), color = NA) +  # Map sequence clusters\n  scale_fill_manual(values = c(\"#FB8072\", \"#80B1D3\"),  # Custom color palette for Black clusters\n                    labels = c(\"Hispanic Majority to Black & Hispanic\", \n                               \"Black and Hispanic to Black Majority\"), \n                    name = \"Increasing Black Pathway\") +\n  coord_sf(xlim = c(-74.3, -73.7), ylim = c(40.5, 40.9), expand = FALSE) +  # Zoom into the NYC area\n  theme_void() +\n  theme(legend.position = \"right\",  # Place legend at the right\n        legend.direction = \"vertical\",  # Arrange legend items vertically\n        legend.title = element_text(size = 12),  # Customize legend title size\n        legend.key.width = unit(2, \"cm\"),\n        legend.box = \"vertical\")  # Place legend title on top\n\n# Combine the two maps side by side using patchwork\ncombined_map &lt;- map_increasing_white + map_increasing_black + plot_layout(ncol = 2)\n\n# Print the combined map with a larger viewing area\nprint(combined_map)\n\n\n\n\n\nCode\n# Optional: Save the combined map with larger dimensions\n#ggsave(\"combined_map_zoomed.png\", combined_map, width = 16, height = 8, dpi = 300)d_map_large.png\", #combined_map, width = 16, height = 8, dpi = 300)\n\n\nFinally, of the sequences depicting no change from 1980 to 2020, shown in Cluster 2, the majority of those are for tracts with a racial majority: White, Hispanic, and Black. But those are followed by two stable sequences of neighborhoods with some racial diversity. The first is the majority White, but with a mixture of other races and the second is the mixed Black and Hispanic cluster. There is some debate in the literature whether racially mixed neighborhoods can be stable over time, or are they simply depicting a point along a pathway of change when one group will eventually become a majority. Research has shown that highly diverse neighborhoods are quite unstable over time, likely to transition to a less diverse state. In particular the transition from predominantly White towards majority Hispanic, results in a period of unstable racial mixture while that transition takes place (Wright et al. 2020). Others have identified a small, but persistent set of racially diverse neighborhoods throughout the United States, but particularly in racially diverse metropolitan areas (Hipp and Kim 2023b). Here, we find some evidence of stable, non-racially homogeneous Census Tracts."
  },
  {
    "objectID": "SequencePaperSep24.html#sec-conclusion",
    "href": "SequencePaperSep24.html#sec-conclusion",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "Conclusions",
    "text": "Conclusions\nThis analysis showcases a method for developing and visualizing a typology of neighborhood change pathways. We used a case study of decennial racial and ethnic changes in New York City census tracts from 1980-2020. The workflow first involves developing a cross-sectional typology of classes describing the racial mixture of neighborhoods. To do so, we used an unsupervised classification approach, k-means to derive six such clusters.\nWe demonstrated how determining the number of clusters often falls to more of an art than a precise science as our final clustering for this analysis exceeded the mathematically optimal three clusters, but provided us with more nuance on the racial mixture of neighborhoods. We performed the cluster analysis on all census tracts in the city for each of the five decennial census time stamps at once to ensure a temporally consistent set of groupings. We then created sequences of neighborhood clusters over the study period and developed a typology of sequences that grouped them based on the similarity of how they changed over time. To do so, we used the OMtrans algorithm for computing sequence dissimilarity to ensure that the *ordering or sequencing of events was preserved. Finally, we mapped sequence clusters to spatially visualize neighborhoods that followed similar pathways of change. For our case study of the largest city in the United States, and one of the most diverse, we observed a decline in the number of majority White census tracts over time. We identified several pathways of change leading to majority Hispanic neighborhoods - emerging either out of previously majority White or Black neighborhoods. We also observed pathways leading to majority Asian tracts, transitioning from Black and Hispanic neighborhoods, largely in Queens. A smaller share of neighborhoods became either increasingly White or Black. Neighborhoods that saw an increase in the share of Whites, saw a notable increase in the transition from Black and Hispanic to White and mixed race over the past two decades. Neighborhoods that increased in the share of Blacks largely transitioned from Black and Hispanic to majority Black or from White and mixed race to Black and Hispanic. The benefits of the sequence analysis technique is in the clarity of the visuals for revealing common pathways of change. One of its drawbacks is that it requires segmenting continuous, longitudinal data into discrete, categorical groups. Other methods for clustering time series offer an alternative approach for visualizing trajectories over time."
  },
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "Cross-referencing figures, tables, and equations",
    "section": "",
    "text": "0.1 Step 2: Cross-Reference the Figure in Your Text\nTo reference this figure in your text, use the following syntax:\nSee Figure @ref(fig:fig-cars-pressure) for the speed and stopping distances of cars and vapor pressure data.\nlabel: fig-cars-pressure\nlayout-ncol: 2\nfig-cap:\n  - “Speed and Stopping Distances of Cars”\n  - “Vapor Pressure of Mercury as a Function of Temperature”\nplot(cars) plot(pressure)"
  },
  {
    "objectID": "test.html#sec-application",
    "href": "test.html#sec-application",
    "title": "Sequence Analysis of Neighborhood Racial and Ethnic Changes: The Case of New York City 1980-2020",
    "section": "Application",
    "text": "Application\n\nStudy Area\nOur study area consists of census tracts within the five Boroughs of New York (see Figure @ref(fig:nyc-plot) for an overview map).\n\n\nCode\n# Your plotting code goes here\n\n\n# Filter for only the New York City counties\nnyc_counties &lt;- ny_counties %&gt;%\n  filter(NAME %in% c(\"Bronx\", \"Kings\", \"New York\", \"Queens\", \"Richmond\")) \n\n# Modify labels for specific counties\nnyc_counties$label_main &lt;- ifelse(nyc_counties$NAME == \"New York\", \"New York\", \n                                  ifelse(nyc_counties$NAME == \"Kings\", \"Kings\",\n                                         ifelse(nyc_counties$NAME == \"Richmond\", \"Richmond\", \n                                                nyc_counties$NAME)))\n\nnyc_counties$label_paren &lt;- ifelse(nyc_counties$NAME == \"New York\", \"(Manhattan)\", \n                                   ifelse(nyc_counties$NAME == \"Kings\", \"(Brooklyn)\",\n                                          ifelse(nyc_counties$NAME == \"Richmond\", \"(Staten Island)\", \n                                                 \"\")))\n\n# Calculate centroids for each county to get coordinates for labels\ncentroids &lt;- st_centroid(nyc_counties)\ncoords &lt;- st_coordinates(centroids)\n\n# Add the coordinates to the nyc_counties data frame\nnyc_counties &lt;- nyc_counties %&gt;%\n  mutate(X = coords[, 1],\n         Y = coords[, 2])\n\n# Adjust coordinates manually for specific counties\nnyc_counties &lt;- nyc_counties %&gt;% \n  mutate(\n    X = ifelse(NAME == \"New York\", X - 0.11, \n               ifelse(NAME == \"Richmond\", X + 0.012, X)), # Move \"New York\" left, Richmond right\n    Y = ifelse(NAME == \"New York\", Y + 0.005, \n               ifelse(NAME == \"Richmond\", Y + 0.03, Y)) # Adjust Richmond label higher\n  )\n\n#you can mask water area if you would like.\n#nyc_counties &lt;- nyc_counties %&gt;%  erase_water(area_threshold = 0.9)\n\n# Create the large map for the state without a scale bar\nzoomed_map &lt;- ggplot() +\n  geom_sf(data = ny_counties, fill = \"gray85\", color = \"white\", size = 1) + # New York State outline\n  geom_sf(data = nyc_counties, fill = \"#85B0A9\", color = \"white\", size = 3) + # NYC counties in teal\n  geom_segment(aes(x = -73.98, y = 40.775, xend = -74.03, yend = 40.775), \n               color = \"gray25\", size = 0.5) + # Line from New York label to the boundary\n  geom_text(data = nyc_counties, aes(x = X, y = Y, label = label_main), \n            color = \"black\", size = 4, family = \"Gill Sans MT\", fontface = \"bold\") + # Add main county names\n  geom_text(data = nyc_counties, aes(x = X, y = Y - 0.02, label = label_paren), \n            color = \"gray25\", size = 3.75, family = \"Gill Sans MT\") + # Add parentheses labels in lighter color\n  geom_text(aes(x = -73.6, y = 40.725, label = \"Nassau\"), \n            color = \"gray55\", size = 4, family = \"Gill Sans MT\", fontface = \"bold\") + # Corrected Nassau label position\n  geom_text(aes(x = -73.8, y = 40.98, label = \"Westchester\"), \n            color = \"gray55\", size = 4, family = \"Gill Sans MT\", fontface = \"bold\") + # Corrected Westchester label\n  geom_text(aes(x = -73.6, y = 40.705, label = \"(Long Island)\"), \n            color = \"gray70\", size = 3.5, family = \"Gill Sans MT\", fontface = \"bold\") + # Add Long Island label below Nassau\n  coord_sf(xlim = c(-74.25, -73.5), ylim = c(40.4, 41.05), expand = FALSE) + # Crop to focus on NYC\n  theme_minimal() +\n  theme(\n    panel.grid.major = element_blank(), # Remove major grid lines\n    panel.grid.minor = element_blank(), # Remove minor grid lines\n    axis.title = element_blank(), # Remove axis titles\n    axis.text = element_blank(), # Remove axis text (labels)\n    legend.position = \"none\", # Remove the legend\n    plot.margin = margin(0, 0, 0, 0) # Remove margins for a tighter crop\n  )\n\n# Create the large map for NY and surrounding counties with text annotation\ninset_map &lt;- ggplot() +\n  geom_sf(data = ny_counties, fill = \"gray90\", color = NA, size = 1) + # All counties in gray, including Nassau and Westchester\n  geom_sf(data = nyc_counties, fill = \"#569289\", color = \"#569289\", size = 5) + # NYC counties in darker teal\n  annotate(\"text\", x = -76.2, y = 42.8, label = \"New York State\", \n           size = 5.25, color = \"gray49\", angle = 0, \n           alpha = 0.7, family = \"Gill Sans MT\") + # Add text label\n  theme_minimal() +\n  theme(\n    panel.grid.major = element_blank(), # Remove major grid lines\n    panel.grid.minor = element_blank(), # Remove minor grid lines\n    plot.title = element_text(hjust = 0), # Align title to the left\n    plot.subtitle = element_text(hjust = 0), # Align subtitle to the left\n    axis.title = element_blank(), # Remove axis titles\n    axis.text = element_blank(), # Remove axis text (labels)\n    plot.margin = margin(0, 0, 0, 0) # Tighten margins\n  )\n\n# Combine the maps, placing the inset map within the zoomed-in map\nfinal_plot &lt;- ggdraw() +\n  draw_plot(zoomed_map) +\n  draw_plot(inset_map, x = 0.07, y = 0.65, width = 0.3, height = 0.3) # Adjust position and size of the inset\n\n# Display the combined plot\nprint(final_plot)\n\n\n\n\n\nOverview map of New York City’s five boroughs and surrounding counties."
  }
]